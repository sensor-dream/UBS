#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: etcbackup
## @Creation date file: 16.10.2020, 06:54:34

[[ -z "${etcbackup_script_source}" ]] && declare -rx etcbackup_script_source="$BASH_SOURCE"

if [[ -z "${etcbackup_script_source_path}" ]]; then
  temp_one="$(dirname ${etcbackup_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx etcbackup_script_source_path="$(pwd)"
  else
    declare -rx etcbackup_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function main_etcbackup_script_source() {

  # printf "Initialise main function of etcbackup script source\n";

  #  if [[ ${session_user_id} -ne 0 ]]; then
  #    echo "Please run script from root user or run script from sudo"
  #    exit 1
  #  fi

  if [[ -z "${cfg_storage_name}" && -f "${main_project_path}/hidden/cfg-storage-information" ]]; then
    . "${main_project_path}/hidden/cfg-storage-information"
  else
    . "${main_project_path}/tools/cfg-storage-information"
  fi

  if [[ $(check_installed_packages tmpwatch) == "tmpwatch" ]]; then
    printf "Check tmpwatch is OK \n"
  else
    sudo dnf install tmpwatch
  fi

  local description="fedora-${os_version_id}"
  local backup_path="${cfg_storage_path}/${cfg_backup_path_name}/Etc/${description}"

  [[ ! -d "${backup_path}" ]] && sudo mkdir -p "${backup_path}" && sudo chown -R ${session_user}.${session_user} "${backup_path}"

  sudo tmpwatch --force --all --mtime 7d "${backup_path}"
  sudo tar -cf - /etc | gzip >"${backup_path}/etc-${format_date}.tar.gz"
  sudo chown ${session_user}.${session_user} "${backup_path}/etc-${format_date}.tar.gz"

}

main_etcbackup_script_source "$@"
