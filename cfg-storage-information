#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: cfg-storage-information
## @Creation date file: 16.10.2020, 06:56:32

[[ -z "${cfg_storage_information_script_source}" ]] && declare -rx cfg_storage_information_script_source="$BASH_SOURCE"

if [[ -z "${cfg_storage_information_script_source_path}" ]]; then
  temp_one="$(dirname ${cfg_storage_information_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx cfg_storage_information_script_source_path="$(pwd)"
  else
    declare -rx cfg_storage_information_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function main_cfg_storage_information_script_source() {

  # printf "Initialise main function of cfg-storage-information script source\n";

  echo
  echo -n "Enter storage name (eg. sda): "
  read cfg_storage_name
  if [[ -z "${cfg_storage_name}" ]]; then
    echo "cfg_storage_name is nul, exit"
    exit
  fi
  echo
  echo -n "Enter storage path (eg. /mnt/sda): "
  read cfg_storage_path
  if [[ -z "${cfg_storage_path}" ]]; then
    echo "cfg_storage_path is null, exit"
    exit
  fi
  echo
  echo -n "Enter storage system path (eg. /dev/sda2): "
  read cfg_storage_system_path
  if [[ -z "${cfg_storage_system_path}" ]]; then
    echo "cfg_storage_system_path is null, exit"
    exit
  fi
  echo
  echo -n "Enter buckup path name(eg. BackUp): "
  read cfg_backup_path_name
  if [[ -z "${cfg_backup_path_name}" ]]; then
    echo "cfg_backup_path_name is null, exit"
    exit
  fi
  echo
  echo -n "Enter  name system path for system scripts, databases  location and more system storage (eg. System): "
  read cfg_system_path_name
  if [[ -z "${cfg_system_path_name}" ]]; then
    echo "cfg_system_path_name is null, exit"
    exit
  fi
  echo
  echo -n "Enter  name development path (eg. Development): "
  read cfg_development_path_name
  if [[ -z "${cfg_development_path_name}" ]]; then
    echo "cfg_development_path_name is null, exit"
    exit
  fi
  echo
  echo -n "Enter  name public www share path (eg. www_share): "
  read cfg_www_public_path_name
  if [[ -z "${cfg_www_public_path_name}" ]]; then
    echo "cfg_www_public_path_name is null, exit"
    exit
  fi
  cat <<EOF >"${main_project_path}/hidden/cfg-storage-information"
declare -rx cfg_storage_name="${cfg_storage_name}";
declare -rx cfg_storage_path="${cfg_storage_path}";
declare -rx cfg_storage_system_path="${cfg_storage_system_path}"
declare -rx cfg_backup_path_name="${cfg_backup_path_name}"
declare -rx cfg_system_path_name="${cfg_system_path_name}"
declare -rx cfg_development_path_name="${cfg_development_path_name}"
declare -rx cfg_www_public_path_name="${cfg_www_public_path_name}"
EOF

  chmod 0600 "${main_project_path}/hidden/cfg-storage-information"

}

main_cfg_storage_information_script_source "$@"
