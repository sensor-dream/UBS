#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: cfg-sshd-information
## @Creation date file: 10.08.2020, 23:57:45

declare -rx cfg_main_sshd_information_script_source="$BASH_SOURCE"

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${cfg_main_sshd_information_script_source})"

echo
echo -n "Введите номер порта SSHD ( def. 22 ): "
read cfg_sshd_port
if [[ -z "${cfg_sshd_port}" ]]; then
  cfg_sshd_port=22
fi
echo
echo -n "Разрешить вход пользователя root ( def. no ): "
read cfg_sshd_permit_root_login
if [[ -z "${cfg_sshd_permit_root_login}" ]]; then
  cfg_sshd_permit_root_login='no'
else
  cfg_sshd_permit_root_login='prohibit-password'
fi
echo
echo -n "Введите количество сбоев аутентификации на одно соединение ( def. 6 ): "
read cfg_sshd_max_auth_tries
if [[ -z "${cfg_sshd_max_auth_tries}" ]]; then
  cfg_sshd_max_auth_tries=6
fi
cat <<EOF >"${main_project_path}/hidden/cfg-sshd-information"
declare -rx cfg_sshd_port="${cfg_sshd_port}";
declare -rx cfg_sshd_permit_root_login="${cfg_sshd_permit_root_login}";
# TODO Make a dynamic MOTD (Bammer) for SSHD
# declare -rx cfg_sshd_show_banner="${main_project_path}/hidden/sshd-banner";
declare -rx cfg_sshd_show_banner="none"
EOF
cat <<EOF >"${main_project_path}/hidden/sshd-banner"
IN ----> ${cfg_full_org}
     contact email: ${cfg_email} --> AND
OUT <--- ${cfg_org}
EOF

chmod 0600 "${main_project_path}/hidden/cfg-sshd-information"
